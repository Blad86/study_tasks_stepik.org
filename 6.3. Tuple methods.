# Кортежи

# Подвиг 3.
# Имеется кортеж: t = (3.4, -56.7)
# Вводится последовательность целых чисел в одну строчку через пробел. Необходимо их добавить в кортеж t. Результат вывести на экран командой:
# print(t)
# Sample Input:
# 8 11 -5 2
# Sample Output:
# (3.4, -56.7, 8, 11, -5, 2)

# Решение:
# t = (3.4, -56.7)
# string = tuple([int(i) for i in input().split()])
# t = t+string
# print(t)

# Подвиг 4.
# Вводятся названия городов в одну строку через пробел. На их основе формируется кортеж.
# Если в этом кортеже нет города "Москва", то следует его добавить в конец кортежа.
# Результат вывести на экран в виде строки с названиями городов через пробел.
# Sample Input:
# Уфа Казань Самара

# Решение:

# Variant #1:
# Cities = tuple(input().split())
#if 'Москва' not in Cities:
 #   AdCity = ('Москва',)
  #  Cities = Cities + AdCity
#print(Cities)

# Variant #2:
# Cities = tuple(input().split())
# Cities = Cities + ("Москва",) if "Москва" not in Cities else Cities
# print(*Cities)

# Подвиг 5. Вводятся названия городов в одну строку через пробел. На их основе формируется кортеж.
# Если в этом кортеже присутствует город "Ульяновск", то этот элемент следует удалить (создав новый кортеж).
# Результат вывести на экран в виде строки с названиями городов через пробел.
# Sample Input:
# Воронеж Самара Тольятти Ульяновск Пермь
# Sample Output:
# Воронеж Самара Тольятти Пермь

# Решение:

# Variant #1:
# Cities = tuple(input().split())
# Cities = list(Cities)
# Cities.remove('Ульяновск')
# Cities = tuple(Cities)
# print(*Cities)

# Variant #2:
# Cities = tuple(i for i in map(str,input().split()) if i !="Ульяновск")
# print(*Cities)

# Подвиг 6. Вводятся имена студентов в одну строчку через пробел. На их основе формируется кортеж.
# Отобразите на экране все имена из этого кортежа, которые содержат фрагмент "ва" (без учета регистра).
# Имена выводятся в одну строчку через пробел в нижнем регистре (малыми буквами).
# Sample Input:
# Петя Варвара Венера Василиса Василий Федор
# Sample Output:
# варвара василиса василий

# Решение:

# Variant #1:
# NameLst = tuple([x.lower() for x in tuple(map(str, input().split())) if 'ва' and 'Ва' in x])
# print(*NameLst)

# Подвиг 7. Вводятся целые числа в одну строку через пробел. На их основе формируется кортеж.
# Необходимо создать еще один кортеж с уникальными (не повторяющимися) значениями из первого кортежа.
# Результат отобразите в виде списка чисел через пробел.
# P. S. Подобные задачи решаются, как правило, с помощью множеств, но в качестве практики пока обойдемся без них.
# Sample Input:
# 8 11 -5 -2 8 11 -5
# Sample Output:
# 8 11 -5 -2

# Решение:

# Variant #1:
# import numpy as np
# Num = np.unique(tuple(map(int, input().split())))
# print(Num[2],Num[3], Num[0], Num[1])

# Variant #2:
# t = []
# for i in input().split():
  #  if i not in t:
   #     t.append(i)
# print(*(tuple(t)))

# Подвиг 8. Вводятся целые числа в одну строку через пробел. На их основе формируется кортеж.
# Необходимо найти и вывести все индексы неуникальных (повторяющихся) значений в этом кортеже.
# Результат отобразите в виде строки чисел, записанных через пробел.
# Sample Input:
# 5 4 -3 2 4 5 10 11
# Sample Output:
# 0 1 4 5

# Решение:

# Num = tuple(map(int, input().split()))
# Index = tuple([i for i, ltr in enumerate(Num) if Num.count(ltr) > 1])
# print(*Index)

# Подвиг 10. Вводятся пункты меню (каждый пункт с новой строки) в формате:
# название_1 URL-адрес_1
# название_2 URL-адрес_2
# ...
# название_N URL-адрес_N
# Необходимо эту информацию представить в виде вложенного кортежа menu в формате:
# ((название_1, URL-адрес_1), (название_2, URL-адрес_2), ... (название_N, URL-адрес_N))
# Результат вывести на экран в виде кортежа командой:
# print(menu)
# P. S. Для считывания списка целиком в программе уже записаны начальные строчки.
# Sample Input:
# Главная home
# Python learn-python
# Java learn-java
# PHP learn-php
# Sample Output:
# (('Главная', 'home'), ('Python', 'learn-python'), ('Java', 'learn-java'), ('PHP', 'learn-php'))

# Решение:

# import sys
# считывание списка из входного потока
# lst_in = list(map(str.strip, sys.stdin.readlines()))
# lst_in = tuple([tuple(x.split()) for x in lst_in])
# print(lst_in)
